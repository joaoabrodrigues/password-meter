{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/main.module.ts","webpack:///./src/app/main/main.routing.ts","webpack:///./src/app/main/password/model/model.ts","webpack:///./src/app/main/password/password.component.css","webpack:///./src/app/main/password/password.component.html","webpack:///./src/app/main/password/password.component.ts","webpack:///./src/app/main/password/password.module.ts","webpack:///./src/app/main/password/password.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Password Check';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from \"./app.routing\";\r\nimport { MainModule } from \"./main/main.module\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule,\r\n    MainModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      { \r\n        path: '**', \r\n        redirectTo: '/main', \r\n        pathMatch: 'full' \r\n      }\r\n    ], {  useHash: true })\r\n  ]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<div fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\"> \\n  <div fxLayout=\\\"row\\\" fxLayoutWrap fxLayoutAlign=\\\"center\\\" class=\\\"overflowScroll\\\"> \\n      <div fxFlex=\\\"50\\\">\\n        <mat-card class=\\\"mat-elevation-z7\\\">\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">\\n              <mat-card-title>AVALIADOR DE SEGURANÃ‡A DE SENHA</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n              <mat-card>\\n                <app-password></app-password>\\n              </mat-card>\\n            </mat-card-content>\\n        </mat-card>\\n      </div> \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MainRouting } from './main.routing';\nimport { MainComponent } from './main.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { PasswordModule } from './password/password.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MainRouting,\n    RouterModule,\n    FlexLayoutModule,\n    MatCardModule,\n    PasswordModule\n  ],\n  declarations: [\n    MainComponent\n  ]\n})\nexport class MainModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MainComponent } from './main.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      { path: 'main',\n        component: MainComponent\n      }\n    ])\n  ]\n})\nexport class MainRouting { }\n","export class PasswordRequest {\n  password: string;\n}\n\nexport class PasswordResponse {\n  score: number = 0;\n  complexity: string = 'Muito curta';\n}\n  ","module.exports = \"\"","module.exports = \"<div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n  <mat-form-field>\\n    <input matInput type=\\\"password\\\" placeholder=\\\"Senha\\\" autocomplete=\\\"off\\\" (input)=\\\"checkPassword($event.target.value)\\\">\\n  </mat-form-field>\\n  <div fxFlex=\\\"100\\\" fxLayout=\\\"row\\\">\\n    <span fxFlex=\\\"10\\\">\\n      {{ response.score }}%\\n    </span>\\n    <span>\\n      {{ response.score == 0 ? 'Muito curta' : response.complexity }}\\n    </span>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PasswordService } from './password.service';\nimport { Subscription } from 'rxjs';\nimport { PasswordResponse } from './model/model';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n\n  public response: PasswordResponse = new PasswordResponse();\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private _passwordService: PasswordService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public checkPassword(password) {\n    this.subscription.add(\n      this._passwordService.checkPassword(password).subscribe(suc => {\n        this.response = suc;\n      }, error => {\n        console.log(error);\n        this.response = new PasswordResponse();\n      })\n    );\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PasswordComponent } from './password.component';\nimport { PasswordService } from './password.service';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatInputModule,\n    MatChipsModule\n  ],\n  declarations: [\n    PasswordComponent\n  ],\n  providers: [\n    HttpClient,\n    PasswordService\n  ],\n  exports: [\n    PasswordComponent\n  ]\n})\nexport class PasswordModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PasswordRequest, PasswordResponse } from './model/model';\n\n@Injectable()\nexport class PasswordService {\n\n  constructor(private _httpClient: HttpClient) { }\n\n  checkPassword(password) {\n    var ip = window.location.origin;\n    const url = ip + '/api/v1/password/meter';\n    var request = new PasswordRequest();\n    request.password = password;\n    return this._httpClient.post<PasswordResponse>(url, request);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}